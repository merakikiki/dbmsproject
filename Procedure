----------------------procedure with rowcount-------------------
DECLARE
  numberOfSales NUMBER;
  CURSOR products_cursor IS SELECT * FROM product where category_id = 1;
BEGIN
  FOR prod IN products_cursor
  LOOP
    DBMS_OUTPUT.PUT_LINE(prod.name);
  END LOOP;
  
  UPDATE product_item
  SET price = price * 0.3 where product_id in (select theid from product where category_id = 1);
  
  numberOfSales := TO_NUMBER(SQL%ROWCOUNT);
  
  DBMS_OUTPUT.PUT_LINE('Now the price is reduced by 30% for ' ||  numberOfSales || ' products');
END;

------------------------procedure order by--------------------------

CREATE OR REPLACE PROCEDURE with_group_by IS
  item_id order_line.productitemid%TYPE;
  quantity order_line.quantity%TYPE;
  totalprice order_line.price%TYPE;

  CURSOR retrieve IS
    SELECT productitemid, SUM(quantity) AS quantity, SUM(price) AS totalprice
    FROM order_line
    GROUP BY productitemid;

BEGIN
  OPEN retrieve;
  LOOP
    FETCH retrieve INTO item_id, quantity, totalprice;
    EXIT WHEN retrieve%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE('ID: ' || item_id || ', Count: ' || quantity || ' - Total: ' || totalprice);

    IF quantity > 15 THEN
        DBMS_OUTPUT.PUT_LINE('The quantity has exceeded 15! Please, order again.');
    END IF;
  END LOOP;
  
  CLOSE retrieve;
END;
